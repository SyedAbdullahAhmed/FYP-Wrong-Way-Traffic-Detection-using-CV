import os
from datetime import datetime
from pymongo import MongoClient
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.utils import ImageReader
from reportlab.lib import colors

def generate_pdf_challan_from_mongo(mongo_uri, db_name, collection_name, output_folder, pdf_output_folder):
    """
    Generates realistic-looking PDF challans for wrong-way vehicles using data from MongoDB.

    Args:
        mongo_uri (str): MongoDB connection URI.
        db_name (str): Name of the database.
        collection_name (str): Name of the collection.
        output_folder (str): Path to the folder containing vehicle images.
        pdf_output_folder (str): Path to save the generated PDF challans.

    Returns:
        str: Status message indicating success or failure.
    """
    os.makedirs(pdf_output_folder, exist_ok=True)

    client = MongoClient(mongo_uri)
    db = client[db_name]
    collection = db[collection_name]

    records = collection.find({"is_challan_generated": False})

    for record in records:
        track_id = record.get("track_id", "N/A")
        vehicle_type = record.get("vehicle_type", "Unknown")
        vehicle_number = record.get("vehicle_number", "ABC-1234")
        image_path = record.get("image_path", "")
        location = record.get("location", "Main Street")
        violation_time = record.get("violation_time",record.get('date',datetime.now().strftime("%Y-%m-%d %H:%M:%S"))  )
        officer_id = record.get("officer_id", "ID-98765")
        fine_amount = record.get("fine_amount", "Rs. 2000")

        if not image_path:
            print(f"Warning: No image path found for record with Track ID: {record.get('track_id', 'Unknown')}. Skipping.")
            continue

        if not os.path.exists(image_path):
            print(f"Warning: Image '{image_path}' not found. Skipping.")
            continue
     

        pdf_file = os.path.join(pdf_output_folder, f"challan_{track_id}.pdf")
        c = canvas.Canvas(pdf_file, pagesize=letter)

        # Border
        c.setStrokeColor(colors.black)
        c.rect(30, 30, 550, 730, stroke=1, fill=0)

        # Header
        c.setFont("Helvetica-Bold", 18)
        c.drawCentredString(300, 770, "TRAFFIC VIOLATION CHALLAN")
        c.setFont("Helvetica", 12)
        c.drawCentredString(300, 750, "Wrong-Way Detection System")
        c.line(30, 740, 580, 740)

        # Vehicle Info
        c.setFont("Helvetica-Bold", 12)
        c.drawString(50, 710, f"Challan No: CH-{track_id}")
        c.drawString(400, 710, f"Date: {datetime.now().strftime('%d-%m-%Y')}")
        c.setFont("Helvetica", 11)
        c.drawString(50, 690, f"Vehicle Number: {vehicle_number}")
        c.drawString(50, 670, f"Vehicle Type: {vehicle_type}")
        c.drawString(50, 650, f"Violation: Wrong-Way Driving")
        c.drawString(50, 630, f"Violation Time: {violation_time}")
        c.drawString(50, 610, f"Location: {location}")

        # Fine Section
        c.setFont("Helvetica-Bold", 12)
        c.drawString(50, 580, f"Fine Amount: {fine_amount}")

        # Image
        try:
            img = ImageReader(image_path)
            c.drawImage(img, 360, 610, width=180, height=130, preserveAspectRatio=True, mask='auto')
        except Exception as e:
            print(f"Error adding image '{image_path}' to PDF: {e}")
            continue

        # Officer and footer
        c.setFont("Helvetica", 11)
        c.drawString(50, 520, f"Issued By Officer ID: {officer_id}")
        c.drawString(50, 500, "Note: Please pay the fine within 7 days to avoid further penalty.")
        
        # Signature section
        c.line(400, 480, 550, 480)
        c.drawString(430, 465, "Authorized Signature")

        # Footer
        c.setFont("Helvetica-Oblique", 10)
        c.drawCentredString(300, 40, "This challan is auto-generated by the Wrong-Way Detection System")

        c.save()
        print(f"PDF generated: {pdf_file}")

        # Update MongoDB
        collection.update_one({"_id": record["_id"]}, {"$set": {"is_challan_generated": True}})

    return "PDF challans generated successfully!"
